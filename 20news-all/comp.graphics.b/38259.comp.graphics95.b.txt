  hus   thought people interested  software group   announcing release multiverse   multiverse multus user non immersive window based virtual reality  system primarily focused entertainment research   feature   client server based model berkeley socket  limit number user performance  generic client  customizable server  hierachical object allowing attachment camera light source  multiple light source ambient point spot  object extension code handle unique functionality easily  attached   functionality   client  client built fast render loop basically change thing  told server render image user  viewpoint server information user  action communicated client  user   client designed generic word don  develop client enter world means  resource spent enhancing client software adapting  adaptation explained moment occur server   release client software support following functionality   hierarchical object associated addressing   multiple light source type ambient point spot   user interface panel   colour polygonal rendering phong shading optional wireframe  frame rate   mouse keyboard input   people disappointed software doesn support  powerglove input device  don enhancement   server  customization place following basic support  provided release potential world server developer   transparent client management   client message handling   sound away headache  accepting  terminating client receiving message  application writer  work assumption thing happening locally   thing interesting object extension functionality  provided allow animate object   server selectable extension installation  means decide object extended  functionality world basically call extension  initialiser   event handler registration  develop extension object basically write callback  function event object respond   collision detection registration  object respond collision event  basic information collision detection management software  callback activated collision occur   software kept separate worldserver application  application developer build library extended object    following world server application   initworld function  object extension supported plus  initialization   positionobject function  determine place client   installworldobject function  load world wld file client   getworldtype function  tell client persona   animateworld function  wild minimum object  move calling move function server sleep bit  avoid outrunning client   prove line count  world server provided   generic line  dactyl line complicated collision detection due  stair probably improved future  version  dogfight line   location   software located following site  ftp washington edu   directory  pub virtual world   file  multiverse tar   future   client   texture mapping    hmd support     server   physical modelling gravity friction   enhanced object management interaction       improved comm   hope people good understanding multiverse  software  unfortunately come practically zero documentation sure  able rectified   hope people enjoy software useful exploration  virtual universe certainly found fascinating developing  love add support powerglove hmd   finally major disclaimer   totally amateur code mean support code  kindness heart pure  desperation held responsible good bad  happen code risk   disclaimer   course love  positive contribution criticism encouraged contact     write     thanks   robert      