    maximize performance monthly posting   compiled art mulder   ram faster cpu disk space faster ethernet  standard response hear ask improve  performance workstation   hardware isn alway option wonder  hardware alway necessity   faq list collection suggestion idea different  people net best possible performance  window workstation purchasing hardware   performance highly subjective issue individual user  balance speed versus feature order come personal  decision document expected contain  subjective opinion objective fact   document specifically concerned course  factor affect performance workstation  scope document   people seriously interested area system  performance look reilly nutshell handbook  system performance tuning mike loukide  reading look written  comprehensive treatment system performance unaware  similar book    table contents   introduction administrivium  faq  window manager  server  server  locking server ram  starting server  font  resource file  define display properly  client  better clock  better terminal emulator  tuning client  miscellaneous suggestion  pretty picture  quicker mouse  programming thought   source information  author note   changed issue  issue    introduction administrivium    document posted month  usenet news group comp window news answer comp answer  reading copy faq  month modified date probably  locate latest edition information outdated   know newsgroup site doe  receive article expired  retrieve faq archive site   exist usenet faq archive site find  access please introduction  news answer newsgroup posting news answer   main faq archive rtfm mit edu document  found pub usenet news answer faq speedup  access anonymous ftp retrieve  sending mail message  command send usenet news answer faq speedup message body    faq    david lewi faq% maintain informative  written comp window frequently asked question document  focus general information faq concentrate  performance   comp window faq doe address issue speed  regards server gist topic  faster  please faq complete detail    window manager    lot window manager lot different  feature ability choice necessity  balancing act performance useful feature  point respondent agreed twm best candidate  speedy window manager   couple generic trick try soup window manger  turning unnecessary thing zooming opaque move  lay window tiled manner reduce  amount cpu power spent raising lowering overlapping  window joe english   found good font tiling aka  misc fixed medium normal iso  biggest font know sun screen  column terminal window side side  display overlap font suggestion accepted    server    server   sure server proper match hardware  monochrome monitor monochrome server   monochrome sun haven noticed difference  xsun colour server xsunmono pointed  xsunmono smaller contribute  paging  michael salmon   server compiled difference jeff law  advise sun system  compiled gcc version unbundled sun compiler  expect large speedup server  bundled suno compiler assume similar result  occur quality commercial  compiler market   locking server ram   tried hacking server locked ram  performance inquiry topic  pointer plock function call hard evidence  tried position give try  danny backx  juan martin  starting server   joe english  start lot client xsession sleep  launching changed  xclient script logging actually took time  heavily loaded system core   sound crazy confirmed work   warner losh provided good explanation  work summarized   start server huge amount time  start accepting connection lot initialization done  server start process touch large number  page process running time fight  server cpu importantly memory  sleep give server chance  sorted client start   similarly lot initialization  fetched program initializing state database  activity typically memory intensive  initialization done process reached steady state  memory usage typically settle page  sleep stagger launching client  xinitrc avoid fighting  workstation limited resource   definitely mileage vary situation  space load average number user system client  starting   currently xinitrc situation  sleep exec xclock  sleep exec xbiff  sleep exec xterm  sleep exec xterm   experimented  sleep exec xclock  sleep exec xbiff  sleep exec xterm  sleep exec xterm   tried  sleep exec start client script  start client script  sleep exec xclock  sleep exec xbiff  sleep exec xterm  sleep exec xterm   idea sure xinit  completely finished processing xinitrc settled  steady state sleep expired client  launched   yielded fairly comparable result stuck  current setup simplicity probably  experiment bit find setup suit   font   loading font time ram minimize number font  application speed increase load time   simple strategy small number font small  large roman suit configure client  heavily client font  client program start quicker font loaded  server conserve server resource fewer  font loaded server  farrell mckay  joe english   menu icon twm default font  don normally eliminated font server   oliver jone  keep font local workstation loading  extensive scalable font font server   resource file    keep xresource xdefault file small ram  server startup time joe english   suggestion   xdefault xresource file try putting minimum  number resource available   separate resource individual client specific  login file set environment variable xuserfilesearchpath   xuserfilesearchpath $home lib app default   comp window frequently asked question faq contain  excellent explanation environment variable work    xterm launch load resource  app default xterm xdvus find app default xdvus  note client follow  xxxxx resource file naming pattern check system  find proper name name personal resource file  name   documented specification  michael urban  mike  kevin willing mail setup file inquirer   method organizing personal resource following  benefit   easier maintain usable   fewer resource stored server resource manager  property side benefit server start fractionally  quicker doesn load resource   application process resource sort  resource find affect   drawback   application interested load  additional file time start doesn  performance difference  consider huge boon usability modifying  application resource database run  application xrdb   xrdb default run xdefault file cpp  resource split multiple resource file  loaded individual client program  watch   style comment xdefault file cpp stripped  switched method distributed resource  file spent frustrating trying figure  client finding resource  error message encountered style  comment resource file simply silently aborted  processing resource file   loss preprocessing handy #ifdef  color cause people dismiss  method resource management   run client break rule  example emac xvt find  resource xdefault   starting client machine doe share file  machine resource stored client  find resource loading resource  server guarantee client alway find  resource casey leedom   possible compromise suggestion planning trying  xdefault file separate resource file method  client   define display properly    client program executed machine server  situation setting display environment variable  name workstation  set display variable unix  access optimized routine know server  machine shared memory method transferring request  thanks patrick horgan   display name section man page  explanation properly set display name   don think stock mit datum general  library smart local communication  display isn set specially  rob sartin opensus   jody goldberg xlib patch change  stock local communication display properly set  don business distributing trying juggle  non mit patch elected hopefully mit  apply minor line patch themselve  try email jody    client    megabyte ram think  carefully number program running think  smaller clock program xclock   unfortunately haven noticed program advertise large  onus research spread word   suggestion better alternative standard client   received contradictory advice people subject  client program advocate program  strictly xlib based xaw toolkit  large warn application  loaded shared library  case non example client program actually  increase amount ram consumed   athena client xview client motif  client dragging  toolkit library   know environment think carefully client  program work best environment   duncan sinclair   better clock    xcuckoo   xcuckoo display clock title bar program  screen real estate   mclock   non based extensively configurable look  mit oclock xclock purely changing  resource   course ultimate clock consume resource  screen real estate hang wall    better terminal emulator    readme file distributed xterm    abandon hope enter   undoubtedly ugly program distribution     ugly site suspect  xterm client site  laziness isn better terminal emulator available   xterm try reducing number saveline  reduce memory usage oliver jone  jonny farringdon   xvt   don esoteric feature xterm  hold xvt written swap space  xterm hog   written partial clone xterm don  rename resource xvt pretend xterm current  version bind key xterm heard  version xvt feature found    brian warkentin regarding xvt  question xvt faster xterm  instance xvt initialize slightly faster compare scrolling  program scroll faster xterm  slightly larger ram requirement don hard  number doe shared library shared text  segment mean xterm paging requirement major   experiment ripped tek stuff xterm  difference  brought memory   stand conflicting report validity  xvt xterm summary caveat emptor mileage vary  hard datum  relative speed   mterm  mterm src mterm ball wax   terminal emulator major lack  scrollback people    tuning client    suggestion tune client program work faster   scott barman come suggestion regarding motif  text field widget   noticed datum entry motif text field widget  getting slight lag response keystroke  particularly initial field examining  going xscope found resource  xmnblinkrate non zero focus text field widget  text widget beam cursor blink  time cursor appear disappear widget  widget code making request server copyarea user  stop setting resource xmnblinkrate  noticeable mhz sparc doe difference  slower system   specific suggestion probably applied general lot  area consider heavily client minor  embellishment turned server  request    miscellaneous suggestion    pretty picture   don large bitmap gif root window background   complicated root window bitmap slower server  redrawing screen reposition window redraw   ram cpu power work sun sparc  conscious performance issue comprehend  people sun running xphoon root window   figure ram occupied  full screen root image colour workstation   screen real estate  client rarely root window   thanks qiang alex zhao  reminding   quicker mouse   xset adjust fast pointer move screen  move mouse xset xinitrc file  send pointer screen flick  wrist xset man page idea information   fine work cover option placed number different  mouse setting command menu window manager   twm  menu mouse setting  mouse setting title  fast xset  normal fast xset  system default accelerated xset default  glacial xset    programming thought   joe english  speed application developing ton  thing stick   motif program don set xmfontlist resource individual  button label list defaultfontlist  labelfontlist resource highest level manager  widget stick font possible   better don motif absolute pig   don create destroy widget fly try reuse  avoid problem buggy toolkit   line width server huge  difference   compress collapse multiple expose event  difference fast application completely unusable    francoi stae  function greatly increase performance based  application malloc heavily suggested trying  gnuy malloc didn find time  test small program malloc free  difference noticeable time faster   confirmation   andre beck   unnecessary noexpose event   people xcopyarea xcopyplane fastest blit routine  forget reset graphic exposure  blit cause noexpose event blit  case load connection force client  run event loop   thousand xchangegc request   gfx context switching handcoded app  created heavily changed  definitely better mechanism caching  sharing lot needed parameter  remove load subsequent xchangegc request  connection moving client startup phase     contributor proposed idea right wall   machine display locally user run  operation client server   situation easily try received  following confirmation   michael salmon  regularly run program machine notice big  difference try run machine reduce net usage  nice reduce impact intrusion  help lot poor  essential   casey leedom  server client competing cpu  server run machine  major problem client server  absolute synchronicity context thrashing   timothy panton  firstly rely fact cpu idle  cpu usage bursty chance teammate  cpu intensive time small  twice cpu memory available  action   factor context switch expensive  cpu half pay price due overhead going  network offset case improved  buffering network typically pipe allowing  fewer context switch    source information    volume reilly window system series window system  administrator guide book administrator read   adrian nye  lot tip performance paper improving  application performance chri peterson sharon chang  issue resource   earlier version paper appeared xhibition  conference proceedings   paper absolutely essential reading programmer    author note   list currently maintained art mulder   suggestion correction submission inclusion list  gladly accepted layout suggestion comment spelling  mistak welcome   currently listed contributor various comment  suggestion credited please tell   speedup faq copyright arthur mulder   copy document part don  try money pretend wrote     art mulder conformed world  department computing science transformed renewal  university alberta edmonton canada mind roman   